{"version":3,"sources":["Components/Header.js","Components/WorldMap.js","Components/Tooltip.js","App.js","index.js"],"names":["Header","className","href","target","WorldMap","setTooltip","geography","world","geographies","map","geo","NAME","properties","onMouseEnter","projects","country","items","onMouseLeave","style","default","fill","outline","hover","pressed","rsmKey","Tooltip","data","item","i","s","field","subfield","type","App","useState","tooltip","data-tip","minZoom","maxZoom","center","stroke","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2qzIAQeA,EARA,kBACX,sBAAKC,UAAU,SAAf,UACI,mBAAGC,KAAK,oCAAoCC,OAAO,SAAnD,wBAGA,oF,gBC2COC,EAvCE,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACb,cAAC,cAAD,CAAaC,UAAWC,EAAxB,SACK,qBAAGC,YACYC,KAAI,SAAAC,GAAQ,IACZC,EAASD,EAAIE,WAAbD,KACR,OACI,cAAC,YAAD,CAEIL,UAAWI,EACXG,aAAc,kBACVC,EAASH,IACTN,EAAW,CAAEU,QAASJ,EAAMK,MAAOF,EAASH,MAEhDM,aAAc,kBAAMZ,EAAW,KAC/Ba,MAAO,CACHC,QAAS,CACLC,KAAMN,EAASH,GACT,oBACA,qBACNU,QAAS,sBAEbC,MAAO,CACHF,KAAMN,EAASH,GACT,oBACA,qBACNU,QAAS,SAEbE,QAAS,CACLH,KAAM,OACNC,QAAS,UAtBZX,EAAIc,e,QCOlBC,EApBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACZ,cAAC,IAAD,UACKA,GACG,qCACI,mCAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMX,UACV,6BACKW,EAAKV,MAAMP,KAAI,SAACkB,EAAMC,GACnB,IAAIC,EAAIF,EAAKG,MAKb,OAJIH,EAAKI,WACLF,GAAK,MAAQF,EAAKI,UAClBJ,EAAKK,OACLH,GAAK,MAAQF,EAAKK,MACf,6BAAaH,GAAJD,cCmBzBK,EAtBH,WAAO,IAAD,EACgBC,mBAAS,CAAEnB,QAAS,GAAIC,MAAO,KAD/C,mBACPmB,EADO,KACE9B,EADF,KAGd,OACI,sBAAKJ,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,gBAAD,CAAemC,WAAS,GAAxB,SACI,eAAC,gBAAD,CAEIC,QAAS,EACTC,QAAS,EACTC,OAAQ,CAAC,GAAI,IAJjB,UAMI,cAAC,YAAD,CAAWC,OAAO,oBAClB,cAAC,EAAD,CAAUnC,WAAYA,SAG9B,cAAC,EAAD,CAASqB,KAAMS,QCxB3BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b149ef41.chunk.js","sourcesContent":["const Header = () =>\r\n    <div className=\"header\">\r\n        <a href=\"https://daalgi.github.io/my-site/\" target=\"_blank\">\r\n            David A.G.\r\n        </a>\r\n        <p>Engineering portfolio: project types by country</p>\r\n    </div>\r\n\r\nexport default Header","import { Geographies, Geography } from \"react-simple-maps\"\r\n\r\nimport projects from \"../portfolio_by_country.json\"\r\nimport world from \"../world-110m.json\"\r\n\r\n\r\n// const geoUrl =\r\n//     \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\r\n\r\nconst WorldMap = ({ setTooltip }) =>\r\n    <Geographies geography={world}>\r\n        {({ geographies }) =>\r\n            geographies.map(geo => {\r\n                const { NAME } = geo.properties\r\n                return (\r\n                    <Geography\r\n                        key={geo.rsmKey}\r\n                        geography={geo}\r\n                        onMouseEnter={() =>\r\n                            projects[NAME] &&\r\n                            setTooltip({ country: NAME, items: projects[NAME] })\r\n                        }\r\n                        onMouseLeave={() => setTooltip(\"\")}\r\n                        style={{\r\n                            default: {\r\n                                fill: projects[NAME]\r\n                                    ? \"hsl(13, 53%, 53%)\"\r\n                                    : \"hsl(213, 13%, 43%)\",\r\n                                outline: \"hsl(213, 13%, 83%)\"\r\n                            },\r\n                            hover: {\r\n                                fill: projects[NAME]\r\n                                    ? \"hsl(13, 53%, 58%)\"\r\n                                    : \"hsl(213, 13%, 48%)\",\r\n                                outline: \"white\"\r\n                            },\r\n                            pressed: {\r\n                                fill: \"#E42\",\r\n                                outline: \"none\"\r\n                            }\r\n                        }}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n\r\n    </Geographies>\r\n\r\nexport default WorldMap","import ReactTooltip from \"react-tooltip\"\r\n\r\n\r\nconst Tooltip = ({ data }) =>\r\n    <ReactTooltip >\r\n        {data && (\r\n            <>\r\n                <p>{data?.country}</p>\r\n                <ul>\r\n                    {data.items.map((item, i) => {\r\n                        let s = item.field\r\n                        if (item.subfield)\r\n                            s += ' - ' + item.subfield\r\n                        if (item.type)\r\n                            s += ' - ' + item.type\r\n                        return <li key={i}>{s}</li>\r\n                    }\r\n                    )}\r\n                </ul>\r\n            </>\r\n        )}\r\n    </ReactTooltip>\r\n\r\nexport default Tooltip","import { useState } from 'react'\nimport {\n    ComposableMap, Graticule, ZoomableGroup\n} from \"react-simple-maps\"\n\nimport './App.css'\nimport Header from './Components/Header'\nimport WorldMap from './Components/WorldMap'\nimport Tooltip from \"./Components/Tooltip\"\n\n\n\nconst App = () => {\n    const [tooltip, setTooltip] = useState({ country: \"\", items: [] })\n    // console.log(tooltip)\n    return (\n        <div className=\"container\">\n            <Header />\n            <ComposableMap data-tip=\"\">\n                <ZoomableGroup\n                    // translateExtent={[[-100, -100], [100, 100]]}\n                    minZoom={1}\n                    maxZoom={2}\n                    center={[0, -20]}\n                >\n                    <Graticule stroke=\"hsl(0, 0%, 43%)\" />\n                    <WorldMap setTooltip={setTooltip} />\n                </ZoomableGroup>\n            </ComposableMap>\n            <Tooltip data={tooltip} />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}